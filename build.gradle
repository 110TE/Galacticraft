buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge' // Add forge dependency

version = "1.7.2-" + System.getenv().BUILD_NUMBER?.toInteger() // Set the version number
group= "micdoodle8.mods.galacticraft"
archivesBaseName = "GalacticraftCore"

minecraft {
    version = "1.7.2-10.12.1.1060" // Forge version
    assetDir = "eclipse/assets" // This is where forge will download Minecraft assets
}

// Configure source folders
sourceSets
{
	main
	{
		java
		{
			// Set the source directory and also include dependencies
			srcDir 'src'
			include 'dependencies'
		}
		
		resources
		{
			// Set the resource directory and also include dependency resources
			srcDir 'src/main/resources'
			include 'dependencies/main/resources'
		}
	}
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Keep a list of dependencies files/directories for easy jar packing
ext.dependencies = ['codechicken/**',
					'**/nei_at.cfg']
// Keep a list of core files/directories for easy jar packing
ext.coreFiles = ['micdoodle8/mods/galacticraft/api/**',
					'micdoodle8/mods/galacticraft/core/**',
					'tconstruct/**',
					'assets/minecraft/**',
					'assets/galacticraftmoon/**',
					'assets/galacticraftcore/**']
// Keep a list of planets addon files/directories for easy jar packing
ext.planetsFiles = ['micdoodle8/mods/galacticraft/planets/**',
					'assets/galacticraftmars/**']
// Keep a list of coremod files/directories for easy jar packing
ext.micdoodleCoreFiles = ['**/micdoodlecore_at.cfg',
					'micdoodle8/mods/miccore/**']

// Configure the main jar
jar
{
	// Add necessary files, remove unnecessary ones.
	includes.addAll(project.ext.coreFiles)
	excludes.addAll(project.ext.dependencies)
	excludes.addAll(project.ext.planetsFiles)
	excludes.addAll(project.ext.micdoodleCoreFiles)
}

// Add a new task for creating the planets jar
task planetsJar(type: Jar, dependsOn: 'build') {
	outputs.upToDateWhen {false}
	baseName = "Galacticraft-Planets"
	
	from(sourceSets.main.output) {
		// Add necessary files, remove unnecessary ones.
		includes.addAll(project.ext.planetsFiles)
		excludes.addAll(project.ext.dependencies)
		excludes.addAll(project.ext.coreFiles)
		excludes.addAll(project.ext.micdoodleCoreFiles)
	}
	
	println 'Created GalacticraftPlanets Jar'
}

// Add a new task for creating the MicdoodleCore jar
task micCoreJar(type: Jar, dependsOn: 'build') {

	// Configure manifest attributes
	manifest
	{
		// Add required coremod manifest attributes
		attributes.put("FMLCorePlugin", "micdoodle8.mods.miccore.MicdoodlePlugin")
		attributes.put("AccessTransformer", "micdoodlecore_at.cfg")
	}
	
	// Jar will always be updated
	outputs.upToDateWhen {false}
	// Set the jar's base name
	baseName = "MicdoodleCore"
	
	from(sourceSets.main.output) {
		// Add necessary files, remove unnecessary ones.
		includes.addAll(project.ext.micdoodleCoreFiles)
		excludes.addAll(project.ext.dependencies)
		excludes.addAll(project.ext.planetsFiles)
		excludes.addAll(project.ext.coreFiles)
		// Remove empty directories
		excludes.addAll(['assets', 'micdoodle8/mods/galacticraft'])
	}
	
	println 'Created MicdoodleCore Jar'
}